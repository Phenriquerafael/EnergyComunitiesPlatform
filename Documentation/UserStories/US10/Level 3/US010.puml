@startuml

activate SPA

note right of SPA
Single Page Application
end note 

SPA -> API : get(/api/patients)
activate API

API -> PatientController : get
activate PatientController

PatientController -> PatientService : getPatients(patientDTO)
activate PatientService

PatientService -> PatientRepo : findAll()
activate PatientRepo
PatientRepo --> PatientService : patients
deactivate PatientRepo

PatientService -> PatientController: patients
PatientController --> API : status code 200
deactivate PatientService
deactivate PatientController

API --> SPA : shows patients
deactivate API

note right of SPA
Admin types patient id
end note

SPA -> SPA : Confirm deletion?
activate SPA

alt confirmation received
    SPA -> API : delete(/api/patients/{id})
    activate API

    API -> PatientController : delete patient
    activate PatientController

    PatientController -> PatientService : deletePatient(patientDTO)
    activate PatientService

    PatientService -> PatientRepo : findByDomainId(patient.id)
    activate PatientRepo
    PatientRepo --> PatientService : patient
    deactivate PatientRepo

    PatientService -> Patient : anonymizeData()
    activate Patient
    Patient -> PatientService : anonymousPatientData
    deactivate Patient

    PatientService -> PatientRepo : save(anonymousPatientData)
    activate PatientRepo
    PatientRepo --> PatientService : status
    deactivate PatientRepo

    PatientService -> PatientMapper : toDTO(anonymousPatientData)
    activate PatientMapper
    PatientMapper --> PatientService : anonymousPatientDataDTO
    deactivate PatientMapper

    PatientService --> PatientController : anonymousPatientDataDTO
    deactivate PatientService

    PatientController --> API : status code 204
    deactivate PatientController

    API --> SPA : success
    deactivate API

    note right of PatientController
    Log deletion for audit and GDPR compliance
    end note

else cancellation
    SPA --> User : Deletion cancelled
end

deactivate SPA

@enduml
