
@startuml delete3
skinparam Monochrome true
skinparam PackageStyle rectangle
skinparam Shadowing false

title Sequence Diagram: DELETE Level 3

participant "Frontend (React, Refine)" as SPA
participant "EnergyManagementAPI" as API
participant "EntityController" as Controller
participant "ApplicationService" as Service
participant "EntityRepo" as Repo
participant "EntityMap" as Map
participant "Entity" as Entity
participant "Persistence" as Pers
participant "PostgreSQL Database" as DB

activate SPA
SPA -> API : GET /entities
activate API
API -> Controller : GET
activate Controller
Controller -> Service : getEntities()
activate Service
Service -> Repo : fetchEntities()
activate Repo
Repo -> Pers : Query entity list
activate Pers
Pers -> DB : Select entity records
activate DB
DB --> Pers : Return entity list
deactivate DB
Pers --> Repo : Return entities
deactivate Pers
Repo --> Service : entities
deactivate Repo
Service -> Map : toDTO(entities)
activate Map
Map -> Service : entitiesDTO
deactivate Map
Service -> Controller : entitiesDTO
deactivate Service
Controller -> API : Status code 200
deactivate Controller
API -> SPA : Success with entity list
deactivate API
SPA --> : Display entity list
User -> SPA : Selects entity {id}
SPA -> API : DELETE /entity/{id}
activate API
API -> Controller : DELETE
activate Controller
Controller -> Service : deleteEntity(id)
activate Service
Service -> Repo : fetchEntity(id)
activate Repo
Repo -> Pers : Query entity data
activate Pers
Pers -> DB : Select entity record
activate DB
DB --> Pers : Return entity data or null
deactivate DB
Pers --> Repo : Return entity or null
deactivate Pers
Repo --> Service : entity or null
deactivate Repo
alt entity exists
    Service -> Repo : delete(id)
    activate Repo
    Repo -> Pers : Delete entity data
    activate Pers
    Pers -> DB : Delete entity record
    activate DB
    DB --> Pers : Confirm deletion
    deactivate DB
    Pers --> Repo : Return success
    deactivate Pers
    Repo --> Service : Success
    deactivate Repo
    Service -> Controller : Success
else entity does not exist
    Service -> Controller : Error
end
Service -> Map : toDTO(result)
activate Map
Map -> Service : resultDTO
deactivate Map
Service -> Controller : resultDTO
deactivate Service
Controller -> API : Status code 200 or 404
deactivate Controller
API -> SPA : Success or error
deactivate API
SPA --> : Display success or error
deactivate SPA

@enduml
